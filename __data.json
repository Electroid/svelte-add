{"type":"data","nodes":[null,{"type":"data","data":[{"adders":1},{"postcss":2,"scss":28,"sass":49,"graphql-server":68,"mdsvex":86,"routify":100,"storybook":109,"firebase-hosting":115,"tauri":136,"bootstrap":150,"bulma":163,"tailwindcss":175,"picocss":208},{"emoji":3,"heuristics":4,"name":17,"options":18,"usageMarkdown":24},"🔺",[5,7,9,11,13,15],{"description":6},"`postcss` is installed",{"description":8},"`postcss-load-config` is installed",{"description":10},"`vitePreprocess` reads PostCSS config implicitly in `svelte.config.js`",{"description":12},"`postcss.config.cjs` exists and `postcss.config.js` does not exist",{"description":14},"`src/app.pcss` exists",{"description":16},"The main file (`src/routes/+layout.svelte` for SvelteKit, `src/main.js` or `src/main.ts` for Vite) imports `src/app.pcss`","PostCSS",{"autoprefixer":19},{"context":20,"default":21,"descriptionMarkdown":22,"question":23},"https://github.com/postcss/autoprefixer",true,"whether or not to install and set up [Autoprefixer](https://github.com/postcss/autoprefixer).","Do you want to use Autoprefixer?",[25,26,27],"You can write PostCSS syntax in the `style lang=\"postcss\"` blocks in Svelte files.","You can write PostCSS syntax in the `src/app.pcss` file.\n\n  This is your global stylesheet because it will be active on every page of your site.","You can install more [PostCSS plugins](https://github.com/postcss/postcss/blob/main/docs/plugins.md) and configure them in the `postcss.config.cjs` file.",{"emoji":29,"heuristics":30,"name":43,"options":44,"usageMarkdown":45},"🕶",[31,33,35,37,39,41],{"description":32},"`sass` is installed",{"description":34},"`vitePreprocess` is set up for SCSS in `svelte.config.js`",{"description":36},"`src/app.scss` exists",{"description":38},"`src/variables.scss` exists",{"description":40},"Vite is set up to automatically import variables.scss",{"description":42},"The main file (`src/routes/+layout.svelte` for SvelteKit, `src/main.js` or `src/main.ts` for Vite) imports `src/app.scss`","SCSS",{},[46,47,48],"You can write SCSS syntax in the `style lang=\"scss\"` blocks in Svelte files.","You can write SCSS syntax in the `src/variables.scss` file.\n\n  Variables and mixins written here are automatically available to all other SCSS files and `style lang=\"scss\"` blocks in Svelte files without needing to import this file.","You can write SCSS syntax in the `src/app.scss` file.\n\n  This is your global stylesheet because it will be active on every page of your site.",{"emoji":29,"heuristics":50,"name":62,"options":63,"usageMarkdown":64},[51,52,54,56,58,60],{"description":32},{"description":53},"`vitePreprocess` is set up for SASS in `svelte.config.js`",{"description":55},"`src/app.sass` exists",{"description":57},"`src/variables.sass` exists",{"description":59},"Vite is set up to automatically import variables.sass",{"description":61},"The main file (`src/routes/+layout.svelte` for SvelteKit, `src/main.js` or `src/main.ts` for Vite) imports `src/app.sass`","SASS",{},[65,66,67],"You can write SASS syntax in the `style lang=\"sass\"` blocks in Svelte files.","You can write SASS syntax in the `src/variables.sass` file.\n\n  Variables and mixins written here are automatically available to all other SASS files and `style lang=\"sass\"` blocks in Svelte files without needing to import this file.","You can write SASS syntax in the `src/app.sass` file.\n\n  This is your global stylesheet because it will be active on every page of your site.",{"emoji":69,"heuristics":70,"name":77,"options":78,"usageMarkdown":79},"🕸",[71,73,75],{"description":72},"`graphql` is installed",{"description":74},"`graphql-helix` is installed",{"description":76},"`src/routes/graphql.js` or `src/routes/graphql.ts` exists","(out of date) GraphQL server",{},[80,81,82,83,84,85],"You can create a GraphQL schema in `src/graphql/schema.ts` using any library or technique you want. Additionally, you can set the `defaultQuery` that shows up when GraphiQL is loaded in the browser.","You can query your API (with POST requests) at the /graphql endpoint.","You can visit GraphiQL in the browser at the /graphql endpoint.","You can see an example of how you may set up resolver-level authorization with the `contextFactory` line in `src/routes/graphql.ts` and the `authorization` argument in `src/graphql/schema.ts`.","The `/` page (in your `src/routes/index.svelte` file) will show an example of how to use your GraphQL API in `load`.","You [_cannot_ use GraphQL subscriptions](https://github.com/svelte-add/graphql/issues/1).",{"emoji":87,"heuristics":88,"name":95,"options":96,"usageMarkdown":97},"🐧",[89,91,93],{"description":90},"`mdsvex` is installed",{"description":92},"`mdsvex` is set up as a preprocessor in `svelte.config.js`",{"description":94},"`mdsvex.config.js` exists and `mdsvex.config.cjs` does not exist","mdsvex",{},[98,99],"You can write Svelte in markdown syntax in `.md`, `.svelte.md`, and `.svx` files and import them as Svelte components.","You can [configure mdsvex](https://mdsvex.com/docs#options) in the `mdsvex.config.js` file.",{"emoji":101,"heuristics":102,"name":105,"options":106,"usageMarkdown":107},"🎀",[103],{"description":104},"`@roxi/routify` is installed","(work in progress) Routify",{},[108],"WIP",{"emoji":110,"heuristics":111,"name":112,"options":113,"usageMarkdown":114},"📓",[],"(work in progress) Storybook",{},[108],{"emoji":116,"heuristics":117,"name":124,"options":125,"usageMarkdown":131},"🔥",[118,120,122],{"description":119},"`firebase-tools` is installed",{"description":121},"`firebase.json` exists",{"description":123},"`.firebaserc` exists","(out of date) Firebase Hosting",{"project":126},{"context":127,"default":128,"descriptionMarkdown":129,"question":130},"You can find it at https://console.firebase.google.com/","","ignore this - it doesn't get used yet","(ignore this - it doesn't get used yet) What is your Firebase project's ID?",[132,133,134,135],"[You _cannot_ use server-side rendering](https://github.com/svelte-add/firebase-hosting/issues/1). Your site must be static. This means that, among other things, [`svelte-add/graphql-server`](https://github.com/svelte-add/graphql-server) is currently not suitable to be hosted on Firebase.","Consider setting up GitHub Actions for automatic building and deployment to Firebase.\n\n  Start by generating [a CI login token from Firebase](https://firebase.google.com/docs/cli#cli-ci-systems):\n\n  ```sh\n  npm run firebase login:ci\n  ```\n\n  Then, go to your repository's [Settings > Secrets](https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository). Copy the result of the command above and [save it as a Secret](https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository) named `FIREBASE_TOKEN`.\n\n  You can test if it's working by making a commit to `main` or `master` and checking the Actions tab of your repository to see if your project successfully builds and deploys to Firebase.","You can create a custom 404 page at `src/routes/404.svelte`.","You can use the `deploy` package script to manually deploy the site after a `build`.",{"emoji":137,"heuristics":138,"name":145,"options":146,"usageMarkdown":147},"💫",[139,141,143],{"description":140},"There are Tauri dev and build scripts in `package.json`",{"description":142},"`src-tauri/tauri.conf.json` exists",{"description":144},"When using SvelteKit, the static adapter is set up","(work in progress) Tauri",{},[148,149],"You can [configure Tauri](https://tauri.studio/en/docs/api/config/) in the `src-tauri/tauri.conf.json` file.","You can import from [the `\"@tauri-apps/api\"` package](https://tauri.studio/en/docs/api/js/index) to access the backend.",{"emoji":151,"heuristics":152,"name":157,"options":158,"usageMarkdown":159},"👢",[153,155],{"description":154},"`bootstrap` is installed",{"description":156},"some `bootstrap` files are imported in `src/app.scss`","Bootstrap",{},[160,161,162],"You can use Bootstrap classes like `card` or `pt-5` in the markup (components, routes, `app.html`).","You can [customize your Bootstrap theme with variables](https://getbootstrap.com/docs/5.2/customize/sass/) like `$primary` or `$grid-breakpoints` in `src/variables.scss`.","The [`@popperjs/core` package](https://www.npmjs.com/package/@popperjs/core) is installed to satisfy `bootstrap`'s peer dependency on it. You can safely ignore it, or uninstall it if you can do so without introducing package manager errors.",{"emoji":164,"heuristics":165,"name":170,"options":171,"usageMarkdown":172},"📗",[166,168],{"description":167},"`bulma` is installed",{"description":169},"some `bulma` files are imported in `src/app.scss`","Bulma",{},[173,174],"You can use Bulma classes like `is-primary` or `mb-3` in the markup (components, routes, `app.html`).","You can [customize your Bulma theme with variables](https://bulma.io/documentation/customize/variables/) like `$success` or `$body-background-color` in `src/variables.scss`.",{"emoji":176,"heuristics":177,"name":188,"options":189,"usageMarkdown":203},"💨",[178,180,182,184,186],{"description":179},"`tailwindcss` is installed",{"description":181},"`postcss.config.cjs` has `tailwindcss` as a plugin",{"description":183},"`tailwind.config.cjs` exists and `tailwind.config.js` does not exist",{"description":185},"`@tailwind` directives are used in `src/app.pcss`",{"description":187},"prettier is configured (if installed)","Tailwind CSS",{"forms":190,"typography":195,"daisyui":199},{"context":191,"default":192,"descriptionMarkdown":193,"question":194},"https://github.com/tailwindlabs/tailwindcss-forms",false,"whether or not to install and set up the [Tailwind CSS Forms plugin](https://github.com/tailwindlabs/tailwindcss-forms).","Do you want to use the Tailwind CSS Forms plugin?",{"context":196,"default":192,"descriptionMarkdown":197,"question":198},"https://github.com/tailwindlabs/tailwindcss-typography","whether or not to install and set up the [Tailwind CSS Typography plugin](https://github.com/tailwindlabs/tailwindcss-typography).","Do you want to use the Tailwind CSS Typography plugin?",{"context":200,"default":192,"descriptionMarkdown":201,"question":202},"It provides component classes for Tailwind CSS. https://daisyui.com/","whether or not to install and set up [daisyUI](https://github.com/saadeghi/daisyui) as a Tailwind plugin.","Do you want to use daisyUI?",[204,205,206,207],"You can use Tailwind utility classes like `bg-blue-700` in the markup (components, routes, `app.html`).","You can use [Tailwind directives like `@apply` and `@screen` or use the `theme` function](https://tailwindcss.com/docs/functions-and-directives) in Svelte `style lang=\"postcss\"` blocks or the `src/app.pcss` file.","You can [configure Tailwind](https://tailwindcss.com/docs/configuration) in the `tailwind.config.cjs` file.","Your Tailwind CSS will be purged for production builds.",{"emoji":209,"heuristics":210,"name":215,"options":216,"usageMarkdown":217},"🔬",[211,213],{"description":212},"`picocss` is installed",{"description":214},"some `picocss` files are imported in `src/app.scss`","PicoCSS",{},[218,219],"You can use Pico CSS classes like `container` or `grid` in the markup (components, routes, `app.html`).","You can [customize your Pico CSS theme with variables](https://picocss.com/docs/customization.html) like `$primary` in `src/variables.scss`."],"uses":{}}]}
